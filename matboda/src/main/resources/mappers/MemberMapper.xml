<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.green.matboda.dao.MemberDAO">
 	<insert id="insertMember">
		insert into member(me_id, me_pw, me_nickname, me_picture, me_name, me_email, me_phoneNum, me_gender)
			values(#{me_id}, #{me_pw}, #{me_nickname}, #{me_picture}, #{me_name}, #{me_email}, #{me_phoneNum}, #{me_gender})
	</insert>
	<select id="selectUser" resultType="kr.green.matboda.vo.MemberVO">
		select * from member where me_id = #{me_id}
	</select>
	<update id="keepLogin">
		update member set
			me_sessionId = #{me_sessionId},
			me_sessionLimit = #{me_sessionLimit}
		where me_id = #{me_id}
	</update>
	<select id="selectUserBySeesion" resultType="kr.green.matboda.vo.MemberVO">
		select * from member 
			where me_sessionId = #{me_sessionId} and me_sessionLimit > now() 
	</select>
	<select id="selectUserList" resultType="kr.green.matboda.vo.MemberVO">
		select * from member
			<if test="me_authority == 'ADMIN'">
				where me_authority = 'USER'
			</if>
			<if test="me_authority == 'SUPER ADMIN'">
				where me_authority != 'SUPER ADMIN'
			</if>
			<if test="cri.search != ''">
				and me_id = #{cri.search} 
			</if>
			order by ${cri.sortType} ${cri.sort} limit #{cri.pageStart}, #{cri.perPageNum}
	</select>
	<update id="updateUser">
		update member set
			me_pw = #{me_pw},
			me_nickname = #{me_nickname},
			me_picture = #{me_picture},
			me_name = #{me_name},
			me_email = #{me_email},
			me_phoneNum = #{me_phoneNum},
			me_gender = #{me_gender},
			me_authority = #{me_authority}
		where me_id = #{me_id}
	</update>
	<select id="getTotalCount" resultType="int">
		select count(*) from member
			<if test="me_authority == 'ADMIN'">
				where me_authority = 'USER'
			</if>
			<if test="me_authority == 'SUPER ADMIN'">
				where me_authority != 'SUPER ADMIN'
			</if>
	</select>
	<delete id="deleteMember">
		delete from member
			where me_id = #{me_id}
	</delete>
	<select id="selectReviewCountById" resultType="int">
		select count(*) from review where re_me_id = #{user.me_id}
	</select>
	<select id="selectFavoritesCountById" resultType="int">
		select count(*) from favorites where fa_me_id = #{user.me_id}
	</select>
	<select id="selectReviewById" resultType="kr.green.matboda.vo.ReviewVO">
		select * from review where re_me_id = #{user.me_id} 
			order by re_num desc
			limit #{cri.pageStart},#{cri.perPageNum}
	</select>
	<select id="selectRestaurantByFavorites" resultType="kr.green.matboda.vo.RestaurantVO">
		select restaurant.*, im_name as rt_im_name from restaurant 
			left join (select * from review group by re_rt_num order by re_num desc) as t on rt_num = re_rt_num
			left join (select * from image group by im_where order by im_num desc) as a on re_num = im_where and im_type = 'REVIEW'
			join favorites on  rt_num = fa_rt_num
            where fa_me_id = #{user.me_id}
			order by rt_reNum desc, rt_score desc, rt_view desc 
	</select>
</mapper>
