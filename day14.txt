클래스
 -정보를 편하게 관리하고 기능을 쉽게 사용하기 위해서
 -구성: 필드(멤버변수), 멤버 메소드, 생성자
 -메소드는 객체 멤버 메소드일 때와 클래스 멤버 메소드일 때 매개변수가 많이 다를 수 있음
  ->클래스 멤버 메소드는 객체 변수를 사용할 수 없어서 매개변수로 넘겨줌
 
 -객체 변수: 각 개체마다 멤버변수들이 있다.
 -클래스 변수: 하나의 멤버변수를 모든 객체가 같이 사용

상속
 -편하게 클래스를 만드려고
 -표준으로 제공되는 클래스들을 상속받기 위해서
 -다형성을 이용하면 매개변수나 멤버변수를 다양하게 적용할 수 있어서
 -다양한 클래스를 하나의 클래스로 관리하기 위해서
  ->도형예제
 -부모 클래스에 있는 멤버변수 또는 메소드를 물려 받는 것
 -접근제한자에 따라 접근할 수 없을 수도 있다.(private)
 -오버라이드: 부모클래스에게 물려받은 메소드를 재정의 하는 것
  ->메소드 선언이 부모 클래스의 메소드와 같은 경우
 -오버로드: 동일한 이름의 메소드나 생성자가 여러게 있는 경우
  -> 매개변수가 다른 경우

상속
 -A는 B이다
 -is a 관계

포함(멤버 변수)
 -A는 B를 가지고 있다
 -has a 관계

생성자
 -여러개 있어도 한개만 선택된다.
 -생성자는 객체를 생성할 때 호출된다. 객체를 통해 생성할 수 없다.
 -생성자 이름은 클래스 명과 동일하다.
 -생성자가 하나도 없으면 기본생성자가 자동으로 생성된다.
 -생성자는 부모클래스의 생성자를 자동 호출한다.
 -리턴타입이 없다
	public A(){} //생성자
	public void A(){}  //클래스

this
 -나를 나타내는 객체
 -this(): 생성자

super
 -부모를 나타내는 객체
 -super(): 부모클래스 생성자